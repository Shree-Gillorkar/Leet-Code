class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        double answer = 0;
        if((nums1.length+nums2.length)==0){
            return answer;
        }else if((nums1.length+nums2.length)==1){
            if(nums1.length!=0){
                answer = nums1[0];
                return answer;
            }else{
                answer = nums2[0];
                return answer;
            }
        }else{
             int[] arr = new int[nums1.length+nums2.length];
             int mid;
             arr = mergeArray(nums1, nums2);
             if((nums1.length+nums2.length)%2==0){
                   mid = (int)arr.length/2;
                 //System.out.println(mid);
                  return (double)(arr[mid-1]+arr[mid])/2;
             }else if((nums1.length+nums2.length)%2!=0){
                  mid = (int)arr.length/2;
                 return arr[mid];
             
             }
            return 0;
       }
   }
    
    private int[] mergeArray(int[] nums1, int nums2[]){
        int[] result = new int[nums1.length+nums2.length];
        int j =0, k =0, i=0;
        while(i<nums1.length && j<nums2.length){
            if(nums1[i]<nums2[j]){
                result[k++] = nums1[i++];
            }else{
                result[k++] = nums2[j++];
            }
        }
        while(i<nums1.length){
             result[k++] = nums1[i++];
        }
        while(j<nums2.length){
             result[k++] = nums2[j++];
        }
        /*for(i =0; i<result.length; i++){
           System.out.println(result[i]);
        }*/
        return result;
    }
}
